ARM GAS  /tmp/ccnkanLz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB235:
  28              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
ARM GAS  /tmp/ccnkanLz.s 			page 2


  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  40              		.loc 1 38 3 view .LVU1
  41              		.loc 1 38 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0093     		str	r3, [sp]
  44 0008 0193     		str	r3, [sp, #4]
  45 000a 0293     		str	r3, [sp, #8]
  46 000c 0393     		str	r3, [sp, #12]
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  45:Core/Src/adc.c ****   */
  46:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  47              		.loc 1 46 3 is_stmt 1 view .LVU3
  48              		.loc 1 46 18 is_stmt 0 view .LVU4
  49 000e 1D48     		ldr	r0, .L9
  50 0010 1D4A     		ldr	r2, .L9+4
  51 0012 0260     		str	r2, [r0]
  47:Core/Src/adc.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  52              		.loc 1 47 3 is_stmt 1 view .LVU5
  53              		.loc 1 47 29 is_stmt 0 view .LVU6
  54 0014 4FF48032 		mov	r2, #65536
  55 0018 4260     		str	r2, [r0, #4]
  48:Core/Src/adc.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  56              		.loc 1 48 3 is_stmt 1 view .LVU7
  57              		.loc 1 48 25 is_stmt 0 view .LVU8
  58 001a 8360     		str	r3, [r0, #8]
  49:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ENABLE;
  59              		.loc 1 49 3 is_stmt 1 view .LVU9
  60              		.loc 1 49 27 is_stmt 0 view .LVU10
  61 001c 0122     		movs	r2, #1
  62 001e 0261     		str	r2, [r0, #16]
  50:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
  63              		.loc 1 50 3 is_stmt 1 view .LVU11
  64              		.loc 1 50 33 is_stmt 0 view .LVU12
  65 0020 0276     		strb	r2, [r0, #24]
ARM GAS  /tmp/ccnkanLz.s 			page 3


  51:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  66              		.loc 1 51 3 is_stmt 1 view .LVU13
  67              		.loc 1 51 36 is_stmt 0 view .LVU14
  68 0022 80F82030 		strb	r3, [r0, #32]
  52:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
  69              		.loc 1 52 3 is_stmt 1 view .LVU15
  70              		.loc 1 52 35 is_stmt 0 view .LVU16
  71 0026 4FF08051 		mov	r1, #268435456
  72 002a C162     		str	r1, [r0, #44]
  53:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T8_TRGO;
  73              		.loc 1 53 3 is_stmt 1 view .LVU17
  74              		.loc 1 53 31 is_stmt 0 view .LVU18
  75 002c 4FF06061 		mov	r1, #234881024
  76 0030 8162     		str	r1, [r0, #40]
  54:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  77              		.loc 1 54 3 is_stmt 1 view .LVU19
  78              		.loc 1 54 24 is_stmt 0 view .LVU20
  79 0032 C360     		str	r3, [r0, #12]
  55:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 2;
  80              		.loc 1 55 3 is_stmt 1 view .LVU21
  81              		.loc 1 55 30 is_stmt 0 view .LVU22
  82 0034 0221     		movs	r1, #2
  83 0036 C161     		str	r1, [r0, #28]
  56:Core/Src/adc.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  84              		.loc 1 56 3 is_stmt 1 view .LVU23
  85              		.loc 1 56 36 is_stmt 0 view .LVU24
  86 0038 80F83020 		strb	r2, [r0, #48]
  57:Core/Src/adc.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
  87              		.loc 1 57 3 is_stmt 1 view .LVU25
  88              		.loc 1 57 27 is_stmt 0 view .LVU26
  89 003c 4361     		str	r3, [r0, #20]
  58:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  90              		.loc 1 58 3 is_stmt 1 view .LVU27
  91              		.loc 1 58 7 is_stmt 0 view .LVU28
  92 003e FFF7FEFF 		bl	HAL_ADC_Init
  93              	.LVL0:
  94              		.loc 1 58 6 view .LVU29
  95 0042 A8B9     		cbnz	r0, .L6
  96              	.L2:
  59:Core/Src/adc.c ****   {
  60:Core/Src/adc.c ****     Error_Handler();
  61:Core/Src/adc.c ****   }
  62:Core/Src/adc.c **** 
  63:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  64:Core/Src/adc.c ****   */
  65:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  97              		.loc 1 65 3 is_stmt 1 view .LVU30
  98              		.loc 1 65 19 is_stmt 0 view .LVU31
  99 0044 0023     		movs	r3, #0
 100 0046 0093     		str	r3, [sp]
  66:Core/Src/adc.c ****   sConfig.Rank = 1;
 101              		.loc 1 66 3 is_stmt 1 view .LVU32
 102              		.loc 1 66 16 is_stmt 0 view .LVU33
 103 0048 0123     		movs	r3, #1
 104 004a 0193     		str	r3, [sp, #4]
  67:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_15CYCLES;
 105              		.loc 1 67 3 is_stmt 1 view .LVU34
ARM GAS  /tmp/ccnkanLz.s 			page 4


 106              		.loc 1 67 24 is_stmt 0 view .LVU35
 107 004c 0293     		str	r3, [sp, #8]
  68:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 108              		.loc 1 68 3 is_stmt 1 view .LVU36
 109              		.loc 1 68 7 is_stmt 0 view .LVU37
 110 004e 6946     		mov	r1, sp
 111 0050 0C48     		ldr	r0, .L9
 112 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 113              	.LVL1:
 114              		.loc 1 68 6 view .LVU38
 115 0056 70B9     		cbnz	r0, .L7
 116              	.L3:
  69:Core/Src/adc.c ****   {
  70:Core/Src/adc.c ****     Error_Handler();
  71:Core/Src/adc.c ****   }
  72:Core/Src/adc.c **** 
  73:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
  74:Core/Src/adc.c ****   */
  75:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 117              		.loc 1 75 3 is_stmt 1 view .LVU39
 118              		.loc 1 75 19 is_stmt 0 view .LVU40
 119 0058 0123     		movs	r3, #1
 120 005a 0093     		str	r3, [sp]
  76:Core/Src/adc.c ****   sConfig.Rank = 2;
 121              		.loc 1 76 3 is_stmt 1 view .LVU41
 122              		.loc 1 76 16 is_stmt 0 view .LVU42
 123 005c 0223     		movs	r3, #2
 124 005e 0193     		str	r3, [sp, #4]
  77:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 125              		.loc 1 77 3 is_stmt 1 view .LVU43
 126              		.loc 1 77 7 is_stmt 0 view .LVU44
 127 0060 6946     		mov	r1, sp
 128 0062 0848     		ldr	r0, .L9
 129 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 130              	.LVL2:
 131              		.loc 1 77 6 view .LVU45
 132 0068 40B9     		cbnz	r0, .L8
 133              	.L1:
  78:Core/Src/adc.c ****   {
  79:Core/Src/adc.c ****     Error_Handler();
  80:Core/Src/adc.c ****   }
  81:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
  82:Core/Src/adc.c **** 
  83:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
  84:Core/Src/adc.c **** 
  85:Core/Src/adc.c **** }
 134              		.loc 1 85 1 view .LVU46
 135 006a 05B0     		add	sp, sp, #20
 136              	.LCFI2:
 137              		.cfi_remember_state
 138              		.cfi_def_cfa_offset 4
 139              		@ sp needed
 140 006c 5DF804FB 		ldr	pc, [sp], #4
 141              	.L6:
 142              	.LCFI3:
 143              		.cfi_restore_state
  60:Core/Src/adc.c ****   }
ARM GAS  /tmp/ccnkanLz.s 			page 5


 144              		.loc 1 60 5 is_stmt 1 view .LVU47
 145 0070 FFF7FEFF 		bl	Error_Handler
 146              	.LVL3:
 147 0074 E6E7     		b	.L2
 148              	.L7:
  70:Core/Src/adc.c ****   }
 149              		.loc 1 70 5 view .LVU48
 150 0076 FFF7FEFF 		bl	Error_Handler
 151              	.LVL4:
 152 007a EDE7     		b	.L3
 153              	.L8:
  79:Core/Src/adc.c ****   }
 154              		.loc 1 79 5 view .LVU49
 155 007c FFF7FEFF 		bl	Error_Handler
 156              	.LVL5:
 157              		.loc 1 85 1 is_stmt 0 view .LVU50
 158 0080 F3E7     		b	.L1
 159              	.L10:
 160 0082 00BF     		.align	2
 161              	.L9:
 162 0084 00000000 		.word	hadc1
 163 0088 00200140 		.word	1073815552
 164              		.cfi_endproc
 165              	.LFE235:
 167              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 168              		.align	1
 169              		.global	HAL_ADC_MspInit
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	HAL_ADC_MspInit:
 176              	.LVL6:
 177              	.LFB236:
  86:Core/Src/adc.c **** 
  87:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  88:Core/Src/adc.c **** {
 178              		.loc 1 88 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 32
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		.loc 1 88 1 is_stmt 0 view .LVU52
 183 0000 30B5     		push	{r4, r5, lr}
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 12
 186              		.cfi_offset 4, -12
 187              		.cfi_offset 5, -8
 188              		.cfi_offset 14, -4
 189 0002 89B0     		sub	sp, sp, #36
 190              	.LCFI5:
 191              		.cfi_def_cfa_offset 48
  89:Core/Src/adc.c **** 
  90:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 192              		.loc 1 90 3 is_stmt 1 view .LVU53
 193              		.loc 1 90 20 is_stmt 0 view .LVU54
 194 0004 0023     		movs	r3, #0
 195 0006 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccnkanLz.s 			page 6


 196 0008 0493     		str	r3, [sp, #16]
 197 000a 0593     		str	r3, [sp, #20]
 198 000c 0693     		str	r3, [sp, #24]
 199 000e 0793     		str	r3, [sp, #28]
  91:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 200              		.loc 1 91 3 is_stmt 1 view .LVU55
 201              		.loc 1 91 15 is_stmt 0 view .LVU56
 202 0010 0268     		ldr	r2, [r0]
 203              		.loc 1 91 5 view .LVU57
 204 0012 03F18043 		add	r3, r3, #1073741824
 205 0016 03F59033 		add	r3, r3, #73728
 206 001a 9A42     		cmp	r2, r3
 207 001c 01D0     		beq	.L15
 208              	.LVL7:
 209              	.L11:
  92:Core/Src/adc.c ****   {
  93:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  94:Core/Src/adc.c **** 
  95:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
  96:Core/Src/adc.c ****     /* ADC1 clock enable */
  97:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
  98:Core/Src/adc.c **** 
  99:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 100:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 101:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 102:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 103:Core/Src/adc.c ****     */
 104:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 105:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 106:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 107:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 108:Core/Src/adc.c **** 
 109:Core/Src/adc.c ****     /* ADC1 DMA Init */
 110:Core/Src/adc.c ****     /* ADC1 Init */
 111:Core/Src/adc.c ****     hdma_adc1.Instance = DMA2_Stream0;
 112:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 113:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 114:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 115:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 116:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 117:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 118:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 119:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 120:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 121:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 122:Core/Src/adc.c ****     {
 123:Core/Src/adc.c ****       Error_Handler();
 124:Core/Src/adc.c ****     }
 125:Core/Src/adc.c **** 
 126:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 127:Core/Src/adc.c **** 
 128:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 129:Core/Src/adc.c **** 
 130:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 131:Core/Src/adc.c ****   }
 132:Core/Src/adc.c **** }
 210              		.loc 1 132 1 view .LVU58
ARM GAS  /tmp/ccnkanLz.s 			page 7


 211 001e 09B0     		add	sp, sp, #36
 212              	.LCFI6:
 213              		.cfi_remember_state
 214              		.cfi_def_cfa_offset 12
 215              		@ sp needed
 216 0020 30BD     		pop	{r4, r5, pc}
 217              	.LVL8:
 218              	.L15:
 219              	.LCFI7:
 220              		.cfi_restore_state
 221              		.loc 1 132 1 view .LVU59
 222 0022 0446     		mov	r4, r0
  97:Core/Src/adc.c **** 
 223              		.loc 1 97 5 is_stmt 1 view .LVU60
 224              	.LBB2:
  97:Core/Src/adc.c **** 
 225              		.loc 1 97 5 view .LVU61
 226 0024 0025     		movs	r5, #0
 227 0026 0195     		str	r5, [sp, #4]
  97:Core/Src/adc.c **** 
 228              		.loc 1 97 5 view .LVU62
 229 0028 03F58C33 		add	r3, r3, #71680
 230 002c 5A6C     		ldr	r2, [r3, #68]
 231 002e 42F48072 		orr	r2, r2, #256
 232 0032 5A64     		str	r2, [r3, #68]
  97:Core/Src/adc.c **** 
 233              		.loc 1 97 5 view .LVU63
 234 0034 5A6C     		ldr	r2, [r3, #68]
 235 0036 02F48072 		and	r2, r2, #256
 236 003a 0192     		str	r2, [sp, #4]
  97:Core/Src/adc.c **** 
 237              		.loc 1 97 5 view .LVU64
 238 003c 019A     		ldr	r2, [sp, #4]
 239              	.LBE2:
  99:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 240              		.loc 1 99 5 view .LVU65
 241              	.LBB3:
  99:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 242              		.loc 1 99 5 view .LVU66
 243 003e 0295     		str	r5, [sp, #8]
  99:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 244              		.loc 1 99 5 view .LVU67
 245 0040 1A6B     		ldr	r2, [r3, #48]
 246 0042 42F00102 		orr	r2, r2, #1
 247 0046 1A63     		str	r2, [r3, #48]
  99:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 248              		.loc 1 99 5 view .LVU68
 249 0048 1B6B     		ldr	r3, [r3, #48]
 250 004a 03F00103 		and	r3, r3, #1
 251 004e 0293     		str	r3, [sp, #8]
  99:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 252              		.loc 1 99 5 view .LVU69
 253 0050 029B     		ldr	r3, [sp, #8]
 254              	.LBE3:
 104:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 255              		.loc 1 104 5 view .LVU70
 104:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /tmp/ccnkanLz.s 			page 8


 256              		.loc 1 104 25 is_stmt 0 view .LVU71
 257 0052 0323     		movs	r3, #3
 258 0054 0393     		str	r3, [sp, #12]
 105:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 105 5 is_stmt 1 view .LVU72
 105:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 260              		.loc 1 105 26 is_stmt 0 view .LVU73
 261 0056 0493     		str	r3, [sp, #16]
 106:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 262              		.loc 1 106 5 is_stmt 1 view .LVU74
 107:Core/Src/adc.c **** 
 263              		.loc 1 107 5 view .LVU75
 264 0058 03A9     		add	r1, sp, #12
 265 005a 1048     		ldr	r0, .L17
 266              	.LVL9:
 107:Core/Src/adc.c **** 
 267              		.loc 1 107 5 is_stmt 0 view .LVU76
 268 005c FFF7FEFF 		bl	HAL_GPIO_Init
 269              	.LVL10:
 111:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 270              		.loc 1 111 5 is_stmt 1 view .LVU77
 111:Core/Src/adc.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 271              		.loc 1 111 24 is_stmt 0 view .LVU78
 272 0060 0F48     		ldr	r0, .L17+4
 273 0062 104B     		ldr	r3, .L17+8
 274 0064 0360     		str	r3, [r0]
 112:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 275              		.loc 1 112 5 is_stmt 1 view .LVU79
 112:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 276              		.loc 1 112 28 is_stmt 0 view .LVU80
 277 0066 4560     		str	r5, [r0, #4]
 113:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 278              		.loc 1 113 5 is_stmt 1 view .LVU81
 113:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 279              		.loc 1 113 30 is_stmt 0 view .LVU82
 280 0068 8560     		str	r5, [r0, #8]
 114:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 281              		.loc 1 114 5 is_stmt 1 view .LVU83
 114:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 282              		.loc 1 114 30 is_stmt 0 view .LVU84
 283 006a C560     		str	r5, [r0, #12]
 115:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 284              		.loc 1 115 5 is_stmt 1 view .LVU85
 115:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 285              		.loc 1 115 27 is_stmt 0 view .LVU86
 286 006c 4FF48063 		mov	r3, #1024
 287 0070 0361     		str	r3, [r0, #16]
 116:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 288              		.loc 1 116 5 is_stmt 1 view .LVU87
 116:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 289              		.loc 1 116 40 is_stmt 0 view .LVU88
 290 0072 4FF48053 		mov	r3, #4096
 291 0076 4361     		str	r3, [r0, #20]
 117:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 292              		.loc 1 117 5 is_stmt 1 view .LVU89
 117:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 293              		.loc 1 117 37 is_stmt 0 view .LVU90
ARM GAS  /tmp/ccnkanLz.s 			page 9


 294 0078 4FF48043 		mov	r3, #16384
 295 007c 8361     		str	r3, [r0, #24]
 118:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 296              		.loc 1 118 5 is_stmt 1 view .LVU91
 118:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 297              		.loc 1 118 25 is_stmt 0 view .LVU92
 298 007e 4FF48073 		mov	r3, #256
 299 0082 C361     		str	r3, [r0, #28]
 119:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 300              		.loc 1 119 5 is_stmt 1 view .LVU93
 119:Core/Src/adc.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 301              		.loc 1 119 29 is_stmt 0 view .LVU94
 302 0084 0562     		str	r5, [r0, #32]
 120:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 303              		.loc 1 120 5 is_stmt 1 view .LVU95
 120:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 304              		.loc 1 120 29 is_stmt 0 view .LVU96
 305 0086 4562     		str	r5, [r0, #36]
 121:Core/Src/adc.c ****     {
 306              		.loc 1 121 5 is_stmt 1 view .LVU97
 121:Core/Src/adc.c ****     {
 307              		.loc 1 121 9 is_stmt 0 view .LVU98
 308 0088 FFF7FEFF 		bl	HAL_DMA_Init
 309              	.LVL11:
 121:Core/Src/adc.c ****     {
 310              		.loc 1 121 8 view .LVU99
 311 008c 18B9     		cbnz	r0, .L16
 312              	.L13:
 126:Core/Src/adc.c **** 
 313              		.loc 1 126 5 is_stmt 1 view .LVU100
 126:Core/Src/adc.c **** 
 314              		.loc 1 126 5 view .LVU101
 315 008e 044B     		ldr	r3, .L17+4
 316 0090 A363     		str	r3, [r4, #56]
 126:Core/Src/adc.c **** 
 317              		.loc 1 126 5 view .LVU102
 318 0092 9C63     		str	r4, [r3, #56]
 319              		.loc 1 132 1 is_stmt 0 view .LVU103
 320 0094 C3E7     		b	.L11
 321              	.L16:
 123:Core/Src/adc.c ****     }
 322              		.loc 1 123 7 is_stmt 1 view .LVU104
 323 0096 FFF7FEFF 		bl	Error_Handler
 324              	.LVL12:
 325 009a F8E7     		b	.L13
 326              	.L18:
 327              		.align	2
 328              	.L17:
 329 009c 00000240 		.word	1073872896
 330 00a0 00000000 		.word	hdma_adc1
 331 00a4 10640240 		.word	1073898512
 332              		.cfi_endproc
 333              	.LFE236:
 335              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 336              		.align	1
 337              		.global	HAL_ADC_MspDeInit
 338              		.syntax unified
ARM GAS  /tmp/ccnkanLz.s 			page 10


 339              		.thumb
 340              		.thumb_func
 341              		.fpu fpv4-sp-d16
 343              	HAL_ADC_MspDeInit:
 344              	.LVL13:
 345              	.LFB237:
 133:Core/Src/adc.c **** 
 134:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 135:Core/Src/adc.c **** {
 346              		.loc 1 135 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Core/Src/adc.c **** 
 137:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 350              		.loc 1 137 3 view .LVU106
 351              		.loc 1 137 15 is_stmt 0 view .LVU107
 352 0000 0268     		ldr	r2, [r0]
 353              		.loc 1 137 5 view .LVU108
 354 0002 094B     		ldr	r3, .L26
 355 0004 9A42     		cmp	r2, r3
 356 0006 00D0     		beq	.L25
 357 0008 7047     		bx	lr
 358              	.L25:
 135:Core/Src/adc.c **** 
 359              		.loc 1 135 1 view .LVU109
 360 000a 10B5     		push	{r4, lr}
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 365 000c 0446     		mov	r4, r0
 138:Core/Src/adc.c ****   {
 139:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 140:Core/Src/adc.c **** 
 141:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 142:Core/Src/adc.c ****     /* Peripheral clock disable */
 143:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 366              		.loc 1 143 5 is_stmt 1 view .LVU110
 367 000e 074A     		ldr	r2, .L26+4
 368 0010 536C     		ldr	r3, [r2, #68]
 369 0012 23F48073 		bic	r3, r3, #256
 370 0016 5364     		str	r3, [r2, #68]
 144:Core/Src/adc.c **** 
 145:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 146:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 147:Core/Src/adc.c ****     PA1     ------> ADC1_IN1
 148:Core/Src/adc.c ****     */
 149:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1);
 371              		.loc 1 149 5 view .LVU111
 372 0018 0321     		movs	r1, #3
 373 001a 0548     		ldr	r0, .L26+8
 374              	.LVL14:
 375              		.loc 1 149 5 is_stmt 0 view .LVU112
 376 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 377              	.LVL15:
 150:Core/Src/adc.c **** 
ARM GAS  /tmp/ccnkanLz.s 			page 11


 151:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 152:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 378              		.loc 1 152 5 is_stmt 1 view .LVU113
 379 0020 A06B     		ldr	r0, [r4, #56]
 380 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 381              	.LVL16:
 153:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 154:Core/Src/adc.c **** 
 155:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 156:Core/Src/adc.c ****   }
 157:Core/Src/adc.c **** }
 382              		.loc 1 157 1 is_stmt 0 view .LVU114
 383 0026 10BD     		pop	{r4, pc}
 384              	.LVL17:
 385              	.L27:
 386              		.loc 1 157 1 view .LVU115
 387              		.align	2
 388              	.L26:
 389 0028 00200140 		.word	1073815552
 390 002c 00380240 		.word	1073887232
 391 0030 00000240 		.word	1073872896
 392              		.cfi_endproc
 393              	.LFE237:
 395              		.comm	hdma_adc1,96,4
 396              		.comm	hadc1,72,4
 397              		.text
 398              	.Letext0:
 399              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 400              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 401              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 402              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 403              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 404              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 405              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 406              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 407              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 408              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 409              		.file 12 "Core/Inc/main.h"
 410              		.file 13 "Core/Inc/adc.h"
ARM GAS  /tmp/ccnkanLz.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccnkanLz.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccnkanLz.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccnkanLz.s:162    .text.MX_ADC1_Init:0000000000000084 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccnkanLz.s:168    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccnkanLz.s:175    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccnkanLz.s:329    .text.HAL_ADC_MspInit:000000000000009c $d
                            *COM*:0000000000000060 hdma_adc1
     /tmp/ccnkanLz.s:336    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccnkanLz.s:343    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccnkanLz.s:389    .text.HAL_ADC_MspDeInit:0000000000000028 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit

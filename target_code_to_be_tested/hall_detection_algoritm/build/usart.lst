ARM GAS  /tmp/ccoLjG7k.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART2_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART2_UART_Init:
  27              	.LFB235:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_tx;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART2 init function */
ARM GAS  /tmp/ccoLjG7k.s 			page 2


  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  33:Core/Src/usart.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  42:Core/Src/usart.c ****   huart2.Instance = USART2;
  38              		.loc 1 42 3 view .LVU1
  39              		.loc 1 42 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
  43              		.loc 1 43 3 is_stmt 1 view .LVU3
  44              		.loc 1 43 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 44 3 is_stmt 1 view .LVU5
  48              		.loc 1 44 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 45 3 is_stmt 1 view .LVU7
  52              		.loc 1 45 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 46 3 is_stmt 1 view .LVU9
  55              		.loc 1 46 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 47 3 is_stmt 1 view .LVU11
  58              		.loc 1 47 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 48 3 is_stmt 1 view .LVU13
  62              		.loc 1 48 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 49 3 is_stmt 1 view .LVU15
  65              		.loc 1 49 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccoLjG7k.s 			page 3


  50:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  67              		.loc 1 50 3 is_stmt 1 view .LVU17
  68              		.loc 1 50 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 50 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  51:Core/Src/usart.c ****   {
  52:Core/Src/usart.c ****     Error_Handler();
  53:Core/Src/usart.c ****   }
  54:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c **** }
  74              		.loc 1 58 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  52:Core/Src/usart.c ****   }
  77              		.loc 1 52 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 58 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	huart2
  86 0030 00440040 		.word	1073759232
  87              		.cfi_endproc
  88              	.LFE235:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_UART_MspInit:
  99              	.LVL2:
 100              	.LFB236:
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  61:Core/Src/usart.c **** {
 101              		.loc 1 61 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		.loc 1 61 1 is_stmt 0 view .LVU24
 106 0000 30B5     		push	{r4, r5, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 5, -8
 111              		.cfi_offset 14, -4
 112 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/ccoLjG7k.s 			page 4


 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 48
  62:Core/Src/usart.c **** 
  63:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 115              		.loc 1 63 3 is_stmt 1 view .LVU25
 116              		.loc 1 63 20 is_stmt 0 view .LVU26
 117 0004 0023     		movs	r3, #0
 118 0006 0393     		str	r3, [sp, #12]
 119 0008 0493     		str	r3, [sp, #16]
 120 000a 0593     		str	r3, [sp, #20]
 121 000c 0693     		str	r3, [sp, #24]
 122 000e 0793     		str	r3, [sp, #28]
  64:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 123              		.loc 1 64 3 is_stmt 1 view .LVU27
 124              		.loc 1 64 16 is_stmt 0 view .LVU28
 125 0010 0268     		ldr	r2, [r0]
 126              		.loc 1 64 5 view .LVU29
 127 0012 224B     		ldr	r3, .L13
 128 0014 9A42     		cmp	r2, r3
 129 0016 01D0     		beq	.L11
 130              	.LVL3:
 131              	.L7:
  65:Core/Src/usart.c ****   {
  66:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
  67:Core/Src/usart.c **** 
  68:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
  69:Core/Src/usart.c ****     /* USART2 clock enable */
  70:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  73:Core/Src/usart.c ****     /**USART2 GPIO Configuration
  74:Core/Src/usart.c ****     PA2     ------> USART2_TX
  75:Core/Src/usart.c ****     PA3     ------> USART2_RX
  76:Core/Src/usart.c ****     */
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  83:Core/Src/usart.c **** 
  84:Core/Src/usart.c ****     /* USART2 DMA Init */
  85:Core/Src/usart.c ****     /* USART2_TX Init */
  86:Core/Src/usart.c ****     hdma_usart2_tx.Instance = DMA1_Stream6;
  87:Core/Src/usart.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
  88:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
  89:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
  90:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
  91:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  92:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  93:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
  94:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
  95:Core/Src/usart.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
  96:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
  97:Core/Src/usart.c ****     {
  98:Core/Src/usart.c ****       Error_Handler();
  99:Core/Src/usart.c ****     }
ARM GAS  /tmp/ccoLjG7k.s 			page 5


 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart2_tx);
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 104:Core/Src/usart.c **** 
 105:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 106:Core/Src/usart.c ****   }
 107:Core/Src/usart.c **** }
 132              		.loc 1 107 1 view .LVU30
 133 0018 09B0     		add	sp, sp, #36
 134              	.LCFI3:
 135              		.cfi_remember_state
 136              		.cfi_def_cfa_offset 12
 137              		@ sp needed
 138 001a 30BD     		pop	{r4, r5, pc}
 139              	.LVL4:
 140              	.L11:
 141              	.LCFI4:
 142              		.cfi_restore_state
 143              		.loc 1 107 1 view .LVU31
 144 001c 0446     		mov	r4, r0
  70:Core/Src/usart.c **** 
 145              		.loc 1 70 5 is_stmt 1 view .LVU32
 146              	.LBB2:
  70:Core/Src/usart.c **** 
 147              		.loc 1 70 5 view .LVU33
 148 001e 0025     		movs	r5, #0
 149 0020 0195     		str	r5, [sp, #4]
  70:Core/Src/usart.c **** 
 150              		.loc 1 70 5 view .LVU34
 151 0022 03F5FA33 		add	r3, r3, #128000
 152 0026 1A6C     		ldr	r2, [r3, #64]
 153 0028 42F40032 		orr	r2, r2, #131072
 154 002c 1A64     		str	r2, [r3, #64]
  70:Core/Src/usart.c **** 
 155              		.loc 1 70 5 view .LVU35
 156 002e 1A6C     		ldr	r2, [r3, #64]
 157 0030 02F40032 		and	r2, r2, #131072
 158 0034 0192     		str	r2, [sp, #4]
  70:Core/Src/usart.c **** 
 159              		.loc 1 70 5 view .LVU36
 160 0036 019A     		ldr	r2, [sp, #4]
 161              	.LBE2:
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 162              		.loc 1 72 5 view .LVU37
 163              	.LBB3:
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 164              		.loc 1 72 5 view .LVU38
 165 0038 0295     		str	r5, [sp, #8]
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 166              		.loc 1 72 5 view .LVU39
 167 003a 1A6B     		ldr	r2, [r3, #48]
 168 003c 42F00102 		orr	r2, r2, #1
 169 0040 1A63     		str	r2, [r3, #48]
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 170              		.loc 1 72 5 view .LVU40
 171 0042 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccoLjG7k.s 			page 6


 172 0044 03F00103 		and	r3, r3, #1
 173 0048 0293     		str	r3, [sp, #8]
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 174              		.loc 1 72 5 view .LVU41
 175 004a 029B     		ldr	r3, [sp, #8]
 176              	.LBE3:
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 177              		.loc 1 77 5 view .LVU42
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 178              		.loc 1 77 25 is_stmt 0 view .LVU43
 179 004c 0C23     		movs	r3, #12
 180 004e 0393     		str	r3, [sp, #12]
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 78 5 is_stmt 1 view .LVU44
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 182              		.loc 1 78 26 is_stmt 0 view .LVU45
 183 0050 0223     		movs	r3, #2
 184 0052 0493     		str	r3, [sp, #16]
  79:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 185              		.loc 1 79 5 is_stmt 1 view .LVU46
  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 186              		.loc 1 80 5 view .LVU47
  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 187              		.loc 1 80 27 is_stmt 0 view .LVU48
 188 0054 0323     		movs	r3, #3
 189 0056 0693     		str	r3, [sp, #24]
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 190              		.loc 1 81 5 is_stmt 1 view .LVU49
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 191              		.loc 1 81 31 is_stmt 0 view .LVU50
 192 0058 0723     		movs	r3, #7
 193 005a 0793     		str	r3, [sp, #28]
  82:Core/Src/usart.c **** 
 194              		.loc 1 82 5 is_stmt 1 view .LVU51
 195 005c 03A9     		add	r1, sp, #12
 196 005e 1048     		ldr	r0, .L13+4
 197              	.LVL5:
  82:Core/Src/usart.c **** 
 198              		.loc 1 82 5 is_stmt 0 view .LVU52
 199 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 200              	.LVL6:
  86:Core/Src/usart.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 201              		.loc 1 86 5 is_stmt 1 view .LVU53
  86:Core/Src/usart.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 202              		.loc 1 86 29 is_stmt 0 view .LVU54
 203 0064 0F48     		ldr	r0, .L13+8
 204 0066 104B     		ldr	r3, .L13+12
 205 0068 0360     		str	r3, [r0]
  87:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 206              		.loc 1 87 5 is_stmt 1 view .LVU55
  87:Core/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 207              		.loc 1 87 33 is_stmt 0 view .LVU56
 208 006a 4FF00063 		mov	r3, #134217728
 209 006e 4360     		str	r3, [r0, #4]
  88:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 210              		.loc 1 88 5 is_stmt 1 view .LVU57
  88:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
ARM GAS  /tmp/ccoLjG7k.s 			page 7


 211              		.loc 1 88 35 is_stmt 0 view .LVU58
 212 0070 4023     		movs	r3, #64
 213 0072 8360     		str	r3, [r0, #8]
  89:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 214              		.loc 1 89 5 is_stmt 1 view .LVU59
  89:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 215              		.loc 1 89 35 is_stmt 0 view .LVU60
 216 0074 C560     		str	r5, [r0, #12]
  90:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 217              		.loc 1 90 5 is_stmt 1 view .LVU61
  90:Core/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 218              		.loc 1 90 32 is_stmt 0 view .LVU62
 219 0076 4FF48063 		mov	r3, #1024
 220 007a 0361     		str	r3, [r0, #16]
  91:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 221              		.loc 1 91 5 is_stmt 1 view .LVU63
  91:Core/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 222              		.loc 1 91 45 is_stmt 0 view .LVU64
 223 007c 4561     		str	r5, [r0, #20]
  92:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 224              		.loc 1 92 5 is_stmt 1 view .LVU65
  92:Core/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 225              		.loc 1 92 42 is_stmt 0 view .LVU66
 226 007e 8561     		str	r5, [r0, #24]
  93:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 227              		.loc 1 93 5 is_stmt 1 view .LVU67
  93:Core/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 228              		.loc 1 93 30 is_stmt 0 view .LVU68
 229 0080 C561     		str	r5, [r0, #28]
  94:Core/Src/usart.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 230              		.loc 1 94 5 is_stmt 1 view .LVU69
  94:Core/Src/usart.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 231              		.loc 1 94 34 is_stmt 0 view .LVU70
 232 0082 0562     		str	r5, [r0, #32]
  95:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 233              		.loc 1 95 5 is_stmt 1 view .LVU71
  95:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 234              		.loc 1 95 34 is_stmt 0 view .LVU72
 235 0084 4562     		str	r5, [r0, #36]
  96:Core/Src/usart.c ****     {
 236              		.loc 1 96 5 is_stmt 1 view .LVU73
  96:Core/Src/usart.c ****     {
 237              		.loc 1 96 9 is_stmt 0 view .LVU74
 238 0086 FFF7FEFF 		bl	HAL_DMA_Init
 239              	.LVL7:
  96:Core/Src/usart.c ****     {
 240              		.loc 1 96 8 view .LVU75
 241 008a 18B9     		cbnz	r0, .L12
 242              	.L9:
 101:Core/Src/usart.c **** 
 243              		.loc 1 101 5 is_stmt 1 view .LVU76
 101:Core/Src/usart.c **** 
 244              		.loc 1 101 5 view .LVU77
 245 008c 054B     		ldr	r3, .L13+8
 246 008e 6363     		str	r3, [r4, #52]
 101:Core/Src/usart.c **** 
 247              		.loc 1 101 5 view .LVU78
ARM GAS  /tmp/ccoLjG7k.s 			page 8


 248 0090 9C63     		str	r4, [r3, #56]
 249              		.loc 1 107 1 is_stmt 0 view .LVU79
 250 0092 C1E7     		b	.L7
 251              	.L12:
  98:Core/Src/usart.c ****     }
 252              		.loc 1 98 7 is_stmt 1 view .LVU80
 253 0094 FFF7FEFF 		bl	Error_Handler
 254              	.LVL8:
 255 0098 F8E7     		b	.L9
 256              	.L14:
 257 009a 00BF     		.align	2
 258              	.L13:
 259 009c 00440040 		.word	1073759232
 260 00a0 00000240 		.word	1073872896
 261 00a4 00000000 		.word	hdma_usart2_tx
 262 00a8 A0600240 		.word	1073897632
 263              		.cfi_endproc
 264              	.LFE236:
 266              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_UART_MspDeInit
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	HAL_UART_MspDeInit:
 275              	.LVL9:
 276              	.LFB237:
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 110:Core/Src/usart.c **** {
 277              		.loc 1 110 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 111:Core/Src/usart.c **** 
 112:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 281              		.loc 1 112 3 view .LVU82
 282              		.loc 1 112 16 is_stmt 0 view .LVU83
 283 0000 0268     		ldr	r2, [r0]
 284              		.loc 1 112 5 view .LVU84
 285 0002 094B     		ldr	r3, .L22
 286 0004 9A42     		cmp	r2, r3
 287 0006 00D0     		beq	.L21
 288 0008 7047     		bx	lr
 289              	.L21:
 110:Core/Src/usart.c **** 
 290              		.loc 1 110 1 view .LVU85
 291 000a 10B5     		push	{r4, lr}
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 296 000c 0446     		mov	r4, r0
 113:Core/Src/usart.c ****   {
 114:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 115:Core/Src/usart.c **** 
ARM GAS  /tmp/ccoLjG7k.s 			page 9


 116:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 117:Core/Src/usart.c ****     /* Peripheral clock disable */
 118:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 297              		.loc 1 118 5 is_stmt 1 view .LVU86
 298 000e 074A     		ldr	r2, .L22+4
 299 0010 136C     		ldr	r3, [r2, #64]
 300 0012 23F40033 		bic	r3, r3, #131072
 301 0016 1364     		str	r3, [r2, #64]
 119:Core/Src/usart.c **** 
 120:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 121:Core/Src/usart.c ****     PA2     ------> USART2_TX
 122:Core/Src/usart.c ****     PA3     ------> USART2_RX
 123:Core/Src/usart.c ****     */
 124:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
 302              		.loc 1 124 5 view .LVU87
 303 0018 0C21     		movs	r1, #12
 304 001a 0548     		ldr	r0, .L22+8
 305              	.LVL10:
 306              		.loc 1 124 5 is_stmt 0 view .LVU88
 307 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 308              	.LVL11:
 125:Core/Src/usart.c **** 
 126:Core/Src/usart.c ****     /* USART2 DMA DeInit */
 127:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 309              		.loc 1 127 5 is_stmt 1 view .LVU89
 310 0020 606B     		ldr	r0, [r4, #52]
 311 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 312              	.LVL12:
 128:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 131:Core/Src/usart.c ****   }
 132:Core/Src/usart.c **** }
 313              		.loc 1 132 1 is_stmt 0 view .LVU90
 314 0026 10BD     		pop	{r4, pc}
 315              	.LVL13:
 316              	.L23:
 317              		.loc 1 132 1 view .LVU91
 318              		.align	2
 319              	.L22:
 320 0028 00440040 		.word	1073759232
 321 002c 00380240 		.word	1073887232
 322 0030 00000240 		.word	1073872896
 323              		.cfi_endproc
 324              	.LFE237:
 326              		.comm	hdma_usart2_tx,96,4
 327              		.comm	huart2,68,4
 328              		.text
 329              	.Letext0:
 330              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 331              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 332              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 333              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 334              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 335              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 336              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 337              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccoLjG7k.s 			page 10


 338              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 339              		.file 11 "Core/Inc/main.h"
 340              		.file 12 "Core/Inc/usart.h"
ARM GAS  /tmp/ccoLjG7k.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccoLjG7k.s:18     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccoLjG7k.s:26     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccoLjG7k.s:85     .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart2
     /tmp/ccoLjG7k.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccoLjG7k.s:98     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccoLjG7k.s:259    .text.HAL_UART_MspInit:000000000000009c $d
                            *COM*:0000000000000060 hdma_usart2_tx
     /tmp/ccoLjG7k.s:267    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccoLjG7k.s:274    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccoLjG7k.s:320    .text.HAL_UART_MspDeInit:0000000000000028 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit

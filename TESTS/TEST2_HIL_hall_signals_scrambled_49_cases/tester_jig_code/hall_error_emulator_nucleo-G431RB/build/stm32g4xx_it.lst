ARM GAS  /tmp/cc11Yqgo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB132:
  28              		.file 1 "Core/Src/stm32g4xx_it.c"
   1:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32g4xx_it.c **** /**
   3:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32g4xx_it.c ****   * @file    stm32g4xx_it.c
   5:Core/Src/stm32g4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32g4xx_it.c ****   * @attention
   8:Core/Src/stm32g4xx_it.c ****   *
   9:Core/Src/stm32g4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32g4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32g4xx_it.c ****   *
  12:Core/Src/stm32g4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32g4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32g4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32g4xx_it.c ****   *
  16:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32g4xx_it.c ****   */
  18:Core/Src/stm32g4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32g4xx_it.c **** 
  20:Core/Src/stm32g4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32g4xx_it.c **** #include "main.h"
  22:Core/Src/stm32g4xx_it.c **** #include "stm32g4xx_it.h"
  23:Core/Src/stm32g4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32g4xx_it.c **** #include "hall_swapper.h"
  26:Core/Src/stm32g4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32g4xx_it.c **** 
  28:Core/Src/stm32g4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32g4xx_it.c **** 
ARM GAS  /tmp/cc11Yqgo.s 			page 2


  31:Core/Src/stm32g4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32g4xx_it.c **** 
  33:Core/Src/stm32g4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32g4xx_it.c **** 
  36:Core/Src/stm32g4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32g4xx_it.c **** 
  38:Core/Src/stm32g4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32g4xx_it.c **** 
  41:Core/Src/stm32g4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32g4xx_it.c **** 
  43:Core/Src/stm32g4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32g4xx_it.c **** 
  46:Core/Src/stm32g4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32g4xx_it.c **** 
  48:Core/Src/stm32g4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32g4xx_it.c **** 
  51:Core/Src/stm32g4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32g4xx_it.c **** 
  53:Core/Src/stm32g4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32g4xx_it.c **** 
  56:Core/Src/stm32g4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32g4xx_it.c **** 
  58:Core/Src/stm32g4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_dac1_ch1;
  60:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_dac1_ch2;
  61:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_lpuart1_rx;
  62:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_lpuart1_tx;
  63:Core/Src/stm32g4xx_it.c **** extern UART_HandleTypeDef hlpuart1;
  64:Core/Src/stm32g4xx_it.c **** extern TIM_HandleTypeDef htim8;
  65:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32g4xx_it.c **** 
  67:Core/Src/stm32g4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32g4xx_it.c **** 
  69:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32g4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32g4xx_it.c **** /**
  73:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32g4xx_it.c ****   */
  75:Core/Src/stm32g4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32g4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32g4xx_it.c **** 
  79:Core/Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /tmp/cc11Yqgo.s 			page 3


  81:Core/Src/stm32g4xx_it.c ****   while (1)
  36              		.loc 1 81 3 discriminator 1 view .LVU1
  82:Core/Src/stm32g4xx_it.c ****   {
  83:Core/Src/stm32g4xx_it.c ****   }
  37              		.loc 1 83 3 discriminator 1 view .LVU2
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE132:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv4-sp-d16
  50              	HardFault_Handler:
  51              	.LFB133:
  84:Core/Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32g4xx_it.c **** }
  86:Core/Src/stm32g4xx_it.c **** 
  87:Core/Src/stm32g4xx_it.c **** /**
  88:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32g4xx_it.c ****   */
  90:Core/Src/stm32g4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32g4xx_it.c **** {
  52              		.loc 1 91 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  92:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32g4xx_it.c **** 
  94:Core/Src/stm32g4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32g4xx_it.c ****   while (1)
  59              		.loc 1 95 3 discriminator 1 view .LVU4
  96:Core/Src/stm32g4xx_it.c ****   {
  97:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32g4xx_it.c ****   }
  60              		.loc 1 99 3 discriminator 1 view .LVU5
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE133:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	MemManage_Handler:
  74              	.LFB134:
 100:Core/Src/stm32g4xx_it.c **** }
 101:Core/Src/stm32g4xx_it.c **** 
 102:Core/Src/stm32g4xx_it.c **** /**
ARM GAS  /tmp/cc11Yqgo.s 			page 4


 103:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32g4xx_it.c ****   */
 105:Core/Src/stm32g4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32g4xx_it.c **** {
  75              		.loc 1 106 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 107:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32g4xx_it.c **** 
 109:Core/Src/stm32g4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32g4xx_it.c ****   while (1)
  82              		.loc 1 110 3 discriminator 1 view .LVU7
 111:Core/Src/stm32g4xx_it.c ****   {
 112:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32g4xx_it.c ****   }
  83              		.loc 1 114 3 discriminator 1 view .LVU8
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE134:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	BusFault_Handler:
  97              	.LFB135:
 115:Core/Src/stm32g4xx_it.c **** }
 116:Core/Src/stm32g4xx_it.c **** 
 117:Core/Src/stm32g4xx_it.c **** /**
 118:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 119:Core/Src/stm32g4xx_it.c ****   */
 120:Core/Src/stm32g4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32g4xx_it.c **** {
  98              		.loc 1 121 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 122:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32g4xx_it.c **** 
 124:Core/Src/stm32g4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32g4xx_it.c ****   while (1)
 105              		.loc 1 125 3 discriminator 1 view .LVU10
 126:Core/Src/stm32g4xx_it.c ****   {
 127:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 128:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32g4xx_it.c ****   }
 106              		.loc 1 129 3 discriminator 1 view .LVU11
ARM GAS  /tmp/cc11Yqgo.s 			page 5


 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE135:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB136:
 130:Core/Src/stm32g4xx_it.c **** }
 131:Core/Src/stm32g4xx_it.c **** 
 132:Core/Src/stm32g4xx_it.c **** /**
 133:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32g4xx_it.c ****   */
 135:Core/Src/stm32g4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32g4xx_it.c **** {
 121              		.loc 1 136 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 137:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32g4xx_it.c **** 
 139:Core/Src/stm32g4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32g4xx_it.c ****   while (1)
 128              		.loc 1 140 3 discriminator 1 view .LVU13
 141:Core/Src/stm32g4xx_it.c ****   {
 142:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32g4xx_it.c ****   }
 129              		.loc 1 144 3 discriminator 1 view .LVU14
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE136:
 134              		.section	.text.SVC_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	SVC_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	SVC_Handler:
 143              	.LFB137:
 145:Core/Src/stm32g4xx_it.c **** }
 146:Core/Src/stm32g4xx_it.c **** 
 147:Core/Src/stm32g4xx_it.c **** /**
 148:Core/Src/stm32g4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 149:Core/Src/stm32g4xx_it.c ****   */
 150:Core/Src/stm32g4xx_it.c **** void SVC_Handler(void)
 151:Core/Src/stm32g4xx_it.c **** {
 144              		.loc 1 151 1 view -0
 145              		.cfi_startproc
ARM GAS  /tmp/cc11Yqgo.s 			page 6


 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 152:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:Core/Src/stm32g4xx_it.c **** 
 154:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:Core/Src/stm32g4xx_it.c **** 
 157:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:Core/Src/stm32g4xx_it.c **** }
 149              		.loc 1 158 1 view .LVU16
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE137:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	DebugMon_Handler:
 163              	.LFB138:
 159:Core/Src/stm32g4xx_it.c **** 
 160:Core/Src/stm32g4xx_it.c **** /**
 161:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Debug monitor.
 162:Core/Src/stm32g4xx_it.c ****   */
 163:Core/Src/stm32g4xx_it.c **** void DebugMon_Handler(void)
 164:Core/Src/stm32g4xx_it.c **** {
 164              		.loc 1 164 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 165:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:Core/Src/stm32g4xx_it.c **** 
 167:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:Core/Src/stm32g4xx_it.c **** 
 170:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:Core/Src/stm32g4xx_it.c **** }
 169              		.loc 1 171 1 view .LVU18
 170 0000 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE138:
 174              		.section	.text.PendSV_Handler,"ax",%progbits
 175              		.align	1
 176              		.global	PendSV_Handler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	PendSV_Handler:
 183              	.LFB139:
 172:Core/Src/stm32g4xx_it.c **** 
 173:Core/Src/stm32g4xx_it.c **** /**
 174:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  /tmp/cc11Yqgo.s 			page 7


 175:Core/Src/stm32g4xx_it.c ****   */
 176:Core/Src/stm32g4xx_it.c **** void PendSV_Handler(void)
 177:Core/Src/stm32g4xx_it.c **** {
 184              		.loc 1 177 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 178:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:Core/Src/stm32g4xx_it.c **** 
 180:Core/Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 181:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:Core/Src/stm32g4xx_it.c **** 
 183:Core/Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:Core/Src/stm32g4xx_it.c **** }
 189              		.loc 1 184 1 view .LVU20
 190 0000 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE139:
 194              		.section	.text.SysTick_Handler,"ax",%progbits
 195              		.align	1
 196              		.global	SysTick_Handler
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	SysTick_Handler:
 203              	.LFB140:
 185:Core/Src/stm32g4xx_it.c **** 
 186:Core/Src/stm32g4xx_it.c **** /**
 187:Core/Src/stm32g4xx_it.c ****   * @brief This function handles System tick timer.
 188:Core/Src/stm32g4xx_it.c ****   */
 189:Core/Src/stm32g4xx_it.c **** void SysTick_Handler(void)
 190:Core/Src/stm32g4xx_it.c **** {
 204              		.loc 1 190 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 08B5     		push	{r3, lr}
 209              	.LCFI0:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 191:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Core/Src/stm32g4xx_it.c **** 
 193:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Core/Src/stm32g4xx_it.c ****   HAL_IncTick();
 213              		.loc 1 194 3 view .LVU22
 214 0002 FFF7FEFF 		bl	HAL_IncTick
 215              	.LVL0:
 195:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 196:Core/Src/stm32g4xx_it.c **** 
 197:Core/Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 198:Core/Src/stm32g4xx_it.c **** }
 216              		.loc 1 198 1 is_stmt 0 view .LVU23
 217 0006 08BD     		pop	{r3, pc}
 218              		.cfi_endproc
ARM GAS  /tmp/cc11Yqgo.s 			page 8


 219              	.LFE140:
 221              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 222              		.align	1
 223              		.global	DMA1_Channel1_IRQHandler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	DMA1_Channel1_IRQHandler:
 230              	.LFB141:
 199:Core/Src/stm32g4xx_it.c **** 
 200:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
 202:Core/Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 203:Core/Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 204:Core/Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
 205:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
 206:Core/Src/stm32g4xx_it.c **** 
 207:Core/Src/stm32g4xx_it.c **** /**
 208:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 209:Core/Src/stm32g4xx_it.c ****   */
 210:Core/Src/stm32g4xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 211:Core/Src/stm32g4xx_it.c **** {
 231              		.loc 1 211 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI1:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 212:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 213:Core/Src/stm32g4xx_it.c **** 
 214:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 215:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_lpuart1_rx);
 240              		.loc 1 215 3 view .LVU25
 241 0002 0248     		ldr	r0, .L18
 242 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 243              	.LVL1:
 216:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 217:Core/Src/stm32g4xx_it.c **** 
 218:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 219:Core/Src/stm32g4xx_it.c **** }
 244              		.loc 1 219 1 is_stmt 0 view .LVU26
 245 0008 08BD     		pop	{r3, pc}
 246              	.L19:
 247 000a 00BF     		.align	2
 248              	.L18:
 249 000c 00000000 		.word	hdma_lpuart1_rx
 250              		.cfi_endproc
 251              	.LFE141:
 253              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 254              		.align	1
 255              		.global	DMA1_Channel2_IRQHandler
 256              		.syntax unified
 257              		.thumb
ARM GAS  /tmp/cc11Yqgo.s 			page 9


 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	DMA1_Channel2_IRQHandler:
 262              	.LFB142:
 220:Core/Src/stm32g4xx_it.c **** 
 221:Core/Src/stm32g4xx_it.c **** /**
 222:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 223:Core/Src/stm32g4xx_it.c ****   */
 224:Core/Src/stm32g4xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 225:Core/Src/stm32g4xx_it.c **** {
 263              		.loc 1 225 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
 226:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 227:Core/Src/stm32g4xx_it.c **** 
 228:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 229:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_lpuart1_tx);
 272              		.loc 1 229 3 view .LVU28
 273 0002 0248     		ldr	r0, .L22
 274 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 275              	.LVL2:
 230:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 231:Core/Src/stm32g4xx_it.c **** 
 232:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 233:Core/Src/stm32g4xx_it.c **** }
 276              		.loc 1 233 1 is_stmt 0 view .LVU29
 277 0008 08BD     		pop	{r3, pc}
 278              	.L23:
 279 000a 00BF     		.align	2
 280              	.L22:
 281 000c 00000000 		.word	hdma_lpuart1_tx
 282              		.cfi_endproc
 283              	.LFE142:
 285              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 286              		.align	1
 287              		.global	DMA1_Channel3_IRQHandler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	DMA1_Channel3_IRQHandler:
 294              	.LFB143:
 234:Core/Src/stm32g4xx_it.c **** 
 235:Core/Src/stm32g4xx_it.c **** /**
 236:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 237:Core/Src/stm32g4xx_it.c ****   */
 238:Core/Src/stm32g4xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 239:Core/Src/stm32g4xx_it.c **** {
 295              		.loc 1 239 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc11Yqgo.s 			page 10


 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI3:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 240:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 241:Core/Src/stm32g4xx_it.c **** 
 242:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 243:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1_ch1);
 304              		.loc 1 243 3 view .LVU31
 305 0002 0248     		ldr	r0, .L26
 306 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 307              	.LVL3:
 244:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 245:Core/Src/stm32g4xx_it.c **** 
 246:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 247:Core/Src/stm32g4xx_it.c **** }
 308              		.loc 1 247 1 is_stmt 0 view .LVU32
 309 0008 08BD     		pop	{r3, pc}
 310              	.L27:
 311 000a 00BF     		.align	2
 312              	.L26:
 313 000c 00000000 		.word	hdma_dac1_ch1
 314              		.cfi_endproc
 315              	.LFE143:
 317              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 318              		.align	1
 319              		.global	DMA1_Channel4_IRQHandler
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	DMA1_Channel4_IRQHandler:
 326              	.LFB144:
 248:Core/Src/stm32g4xx_it.c **** 
 249:Core/Src/stm32g4xx_it.c **** /**
 250:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 251:Core/Src/stm32g4xx_it.c ****   */
 252:Core/Src/stm32g4xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 253:Core/Src/stm32g4xx_it.c **** {
 327              		.loc 1 253 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 08B5     		push	{r3, lr}
 332              	.LCFI4:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
 254:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 255:Core/Src/stm32g4xx_it.c **** 
 256:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 257:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1_ch2);
 336              		.loc 1 257 3 view .LVU34
 337 0002 0248     		ldr	r0, .L30
 338 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
ARM GAS  /tmp/cc11Yqgo.s 			page 11


 339              	.LVL4:
 258:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 259:Core/Src/stm32g4xx_it.c **** 
 260:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 261:Core/Src/stm32g4xx_it.c **** }
 340              		.loc 1 261 1 is_stmt 0 view .LVU35
 341 0008 08BD     		pop	{r3, pc}
 342              	.L31:
 343 000a 00BF     		.align	2
 344              	.L30:
 345 000c 00000000 		.word	hdma_dac1_ch2
 346              		.cfi_endproc
 347              	.LFE144:
 349              		.section	.text.TIM8_UP_IRQHandler,"ax",%progbits
 350              		.align	1
 351              		.global	TIM8_UP_IRQHandler
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	TIM8_UP_IRQHandler:
 358              	.LFB145:
 262:Core/Src/stm32g4xx_it.c **** 
 263:Core/Src/stm32g4xx_it.c **** /**
 264:Core/Src/stm32g4xx_it.c ****   * @brief This function handles TIM8 update interrupt.
 265:Core/Src/stm32g4xx_it.c ****   */
 266:Core/Src/stm32g4xx_it.c **** void TIM8_UP_IRQHandler(void)
 267:Core/Src/stm32g4xx_it.c **** {
 359              		.loc 1 267 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI5:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 268:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM8_UP_IRQn 0 */
 269:Core/Src/stm32g4xx_it.c ****   hall_swapper_twentyKHzinterruptionIRQ();
 368              		.loc 1 269 3 view .LVU37
 369 0002 FFF7FEFF 		bl	hall_swapper_twentyKHzinterruptionIRQ
 370              	.LVL5:
 270:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM8_UP_IRQn 0 */
 271:Core/Src/stm32g4xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 371              		.loc 1 271 3 view .LVU38
 372 0006 0248     		ldr	r0, .L34
 373 0008 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 374              	.LVL6:
 272:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM8_UP_IRQn 1 */
 273:Core/Src/stm32g4xx_it.c **** 
 274:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM8_UP_IRQn 1 */
 275:Core/Src/stm32g4xx_it.c **** }
 375              		.loc 1 275 1 is_stmt 0 view .LVU39
 376 000c 08BD     		pop	{r3, pc}
 377              	.L35:
 378 000e 00BF     		.align	2
 379              	.L34:
ARM GAS  /tmp/cc11Yqgo.s 			page 12


 380 0010 00000000 		.word	htim8
 381              		.cfi_endproc
 382              	.LFE145:
 384              		.section	.text.LPUART1_IRQHandler,"ax",%progbits
 385              		.align	1
 386              		.global	LPUART1_IRQHandler
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	LPUART1_IRQHandler:
 393              	.LFB146:
 276:Core/Src/stm32g4xx_it.c **** 
 277:Core/Src/stm32g4xx_it.c **** /**
 278:Core/Src/stm32g4xx_it.c ****   * @brief This function handles LPUART1 global interrupt.
 279:Core/Src/stm32g4xx_it.c ****   */
 280:Core/Src/stm32g4xx_it.c **** void LPUART1_IRQHandler(void)
 281:Core/Src/stm32g4xx_it.c **** {
 394              		.loc 1 281 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI6:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 282:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 0 */
 283:Core/Src/stm32g4xx_it.c **** 
 284:Core/Src/stm32g4xx_it.c ****   /* USER CODE END LPUART1_IRQn 0 */
 285:Core/Src/stm32g4xx_it.c ****   HAL_UART_IRQHandler(&hlpuart1);
 403              		.loc 1 285 3 view .LVU41
 404 0002 0248     		ldr	r0, .L38
 405 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 406              	.LVL7:
 286:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 1 */
 287:Core/Src/stm32g4xx_it.c **** 
 288:Core/Src/stm32g4xx_it.c ****   /* USER CODE END LPUART1_IRQn 1 */
 289:Core/Src/stm32g4xx_it.c **** }
 407              		.loc 1 289 1 is_stmt 0 view .LVU42
 408 0008 08BD     		pop	{r3, pc}
 409              	.L39:
 410 000a 00BF     		.align	2
 411              	.L38:
 412 000c 00000000 		.word	hlpuart1
 413              		.cfi_endproc
 414              	.LFE146:
 416              		.text
 417              	.Letext0:
 418              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 419              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 420              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 421              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 422              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 423              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 424              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 425              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
ARM GAS  /tmp/cc11Yqgo.s 			page 13


 426              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 427              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 428              		.file 12 "Core/Inc/hall_swapper.h"
ARM GAS  /tmp/cc11Yqgo.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_it.c
     /tmp/cc11Yqgo.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc11Yqgo.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc11Yqgo.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc11Yqgo.s:89     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc11Yqgo.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc11Yqgo.s:135    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:142    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc11Yqgo.s:155    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:162    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc11Yqgo.s:175    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:182    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc11Yqgo.s:195    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc11Yqgo.s:202    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc11Yqgo.s:222    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
     /tmp/cc11Yqgo.s:229    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
     /tmp/cc11Yqgo.s:249    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
     /tmp/cc11Yqgo.s:254    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
     /tmp/cc11Yqgo.s:261    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
     /tmp/cc11Yqgo.s:281    .text.DMA1_Channel2_IRQHandler:000000000000000c $d
     /tmp/cc11Yqgo.s:286    .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
     /tmp/cc11Yqgo.s:293    .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
     /tmp/cc11Yqgo.s:313    .text.DMA1_Channel3_IRQHandler:000000000000000c $d
     /tmp/cc11Yqgo.s:318    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
     /tmp/cc11Yqgo.s:325    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
     /tmp/cc11Yqgo.s:345    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
     /tmp/cc11Yqgo.s:350    .text.TIM8_UP_IRQHandler:0000000000000000 $t
     /tmp/cc11Yqgo.s:357    .text.TIM8_UP_IRQHandler:0000000000000000 TIM8_UP_IRQHandler
     /tmp/cc11Yqgo.s:380    .text.TIM8_UP_IRQHandler:0000000000000010 $d
     /tmp/cc11Yqgo.s:385    .text.LPUART1_IRQHandler:0000000000000000 $t
     /tmp/cc11Yqgo.s:392    .text.LPUART1_IRQHandler:0000000000000000 LPUART1_IRQHandler
     /tmp/cc11Yqgo.s:412    .text.LPUART1_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_lpuart1_rx
hdma_lpuart1_tx
hdma_dac1_ch1
hdma_dac1_ch2
hall_swapper_twentyKHzinterruptionIRQ
HAL_TIM_IRQHandler
htim8
HAL_UART_IRQHandler
hlpuart1
